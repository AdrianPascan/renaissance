name: build
on: [push, pull_request]
jobs:
  checks:
    runs-on: ubuntu-latest
    container: "renaissancebench/buildenv:openjdk8"
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Check file encoding"
        shell: bash
        run: tools/ci/check-encoding.sh

      - name: "Start SBT"
        shell: bash
        run: tools/ci/check-sbt.sh

      - name: "Check source code formatting"
        shell: bash
        run: tools/ci/check-formatting.sh

      - name: "Build default JAR"
        shell: bash
        run: tools/ci/build-base.sh

      - name: "Stop SBT"
        shell: bash
        run: tools/ci/stop-sbt.sh

      - name: "Check generated files are up-to-date"
        shell: bash
        run: tools/ci/check-markdown.sh

  linux:
    strategy:
      matrix:
        image:
          - openjdk8
          - openjdk9
          - openjdk10
          - openjdk11
          #- openjdk12
          - openj9-openjdk8
          - openj9-openjdk11
          #- openj9-openjdk16
    runs-on: ubuntu-latest
    container: "renaissancebench/buildenv:${{ matrix.image }}"
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

      - name: Environment configuration
        shell: bash
        run: "tools/ci/pre-show-env.sh"

      - name: Build base
        shell: bash
        run: "tools/ci/build-base.sh"

      - name: Build JMH
        shell: bash
        run: "tools/ci/build-jmh.sh"

      - name: Stop SBT
        shell: bash
        run: "tools/ci/stop-sbt.sh"

      - name: Check JMH
        shell: bash
        run: "tools/ci/check-jmh.sh"

      - name: Run the suite
        shell: bash
        run: "tools/ci/bench-base.sh"

      - name: Run the suite with JMH
        shell: bash
        run: "tools/ci/bench-jmh.sh"

  macos:
    strategy:
      matrix:
        java: [ '8', '11' ] #, '13', '15' ]
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup correct Java version
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Environment configuration
        shell: bash
        run: "tools/ci/pre-show-env.sh"

      - name: Build base
        shell: bash
        run: "tools/ci/build-base.sh"

      - name: Build JMH
        shell: bash
        run: "tools/ci/build-jmh.sh"

      - name: Stop SBT
        shell: bash
        run: "tools/ci/stop-sbt.sh"

      - name: Check JMH
        shell: bash
        run: "tools/ci/check-jmh.sh"

      - name: Dummy run and environment configuration
        shell: bash
        run: "tools/ci/bench-show-env.sh"

      - name: Run the suite
        shell: bash
        run: "tools/ci/bench-base.sh"

      - name: Run the suite with JMH
        shell: bash
        run: "tools/ci/bench-jmh.sh"

  windows:
    strategy:
      matrix:
        java: [ '8', '11' ] #, '13', '15' ]
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup correct Java version
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Environment configuration
        shell: bash
        run: "tools/ci/pre-show-env.sh"

      - name: Build base
        shell: bash
        run: java -jar tools/sbt/bin/sbt-launch.jar assembly

      - name: Build JMH
        shell: bash
        run: java -jar tools/sbt/bin/sbt-launch.jar renaissanceJmh/jmh:assembly

      - name: Check JMH
        shell: bash
        run: "tools/ci/check-jmh.sh"

      - name: Dummy run and environment configuration
        shell: bash
        run: "tools/ci/bench-show-env.sh"

      - name: Run the suite
        shell: bash
        run: "tools/ci/bench-base.sh"

      - name: Run the suite with JMH
        shell: bash
        run: "tools/ci/bench-jmh.sh"
